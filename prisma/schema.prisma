// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserType {
  ADMIN
  USER
}

model User {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  email     String     @unique
  name      String
  password  String
  type      UserType   @default(USER)
  blogPosts BlogPost[]
  comments  Comment[]
}

model BlogPost {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  content    String
  categoryId String       @db.ObjectId
  authorId   String       @db.ObjectId
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  author     User         @relation(fields: [authorId], references: [id])
  comments   Comment[]
  category   BlogCategory @relation(fields: [categoryId], references: [id])
}

model BlogCategory {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  blogPosts BlogPost[]
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  comment   String
  postId    String   @db.ObjectId
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  blogPost  BlogPost @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}
